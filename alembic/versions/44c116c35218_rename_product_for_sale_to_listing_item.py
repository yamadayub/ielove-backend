"""rename_product_for_sale_to_listing_item

Revision ID: 44c116c35218
Revises: cf254705a790
Create Date: 2024-12-28 23:21:47.654724

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '44c116c35218'
down_revision: Union[str, None] = 'cf254705a790'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 1. 新しいテーブルを作成
    op.create_table('listing_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('seller_id', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('price', sa.Integer(), nullable=False),
                    sa.Column('listing_type', sa.String(), nullable=False),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.Column('property_id', sa.Integer(), nullable=True),
                    sa.Column('room_id', sa.Integer(), nullable=True),
                    sa.Column('product_id', sa.Integer(), nullable=True),
                    sa.Column('is_negotiable', sa.Boolean(), nullable=True),
                    sa.Column('service_type', sa.String(), nullable=True),
                    sa.Column('service_duration', sa.Integer(), nullable=True),
                    sa.Column('is_featured', sa.Boolean(), nullable=True),
                    sa.Column('visibility', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('published_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(
                        ['property_id'], ['properties.id'], ),
                    sa.ForeignKeyConstraint(['room_id'], ['rooms.id'], ),
                    sa.ForeignKeyConstraint(
                        ['seller_id'], ['seller_profiles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # 2. データを移行
    op.execute("""
        INSERT INTO listing_items (
            id, seller_id, title, description, price, listing_type, status,
            property_id, room_id, product_id, is_negotiable, service_type,
            service_duration, created_at, updated_at
        )
        SELECT
            id, seller_id, name, description, price,
            sale_type, status, property_id, room_id, product_id,
            is_negotiable, consultation_type, consultation_minutes,
            created_at, updated_at
        FROM products_for_sale;
    """)

    # 3. 外部キーを更新
    # purchasesテーブルの更新
    op.add_column('purchases', sa.Column(
        'listing_item_id', sa.Integer(), nullable=True))
    op.execute("""
        UPDATE purchases
        SET listing_item_id = product_for_sale_id
    """)
    op.alter_column('purchases', 'listing_item_id', nullable=False)
    op.drop_constraint('purchases_product_for_sale_id_fkey',
                       'purchases', type_='foreignkey')
    op.create_foreign_key(None, 'purchases', 'listing_items', [
                          'listing_item_id'], ['id'])
    op.drop_column('purchases', 'product_for_sale_id')

    # salesテーブルの更新
    op.add_column('sales', sa.Column(
        'listing_item_id', sa.Integer(), nullable=True))
    op.execute("""
        UPDATE sales
        SET listing_item_id = product_for_sale_id
    """)
    op.alter_column('sales', 'listing_item_id', nullable=False)
    op.drop_constraint('sales_product_for_sale_id_fkey',
                       'sales', type_='foreignkey')
    op.create_foreign_key(None, 'sales', 'listing_items',
                          ['listing_item_id'], ['id'])
    op.drop_column('sales', 'product_for_sale_id')

    # 4. 古いテーブルを削除
    op.drop_table('products_for_sale')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('products_for_sale',
                    sa.Column('id', sa.INTEGER(),
                              autoincrement=True, nullable=False),
                    sa.Column('seller_id', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(),
                              autoincrement=False, nullable=False),
                    sa.Column('description', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.Column('price', sa.INTEGER(),
                              autoincrement=False, nullable=False),
                    sa.Column('sale_type', sa.VARCHAR(),
                              autoincrement=False, nullable=False),
                    sa.Column('consultation_type', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('status', sa.VARCHAR(),
                              autoincrement=False, nullable=True),
                    sa.Column('property_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('room_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('product_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('is_negotiable', sa.BOOLEAN(),
                              autoincrement=False, nullable=True),
                    sa.Column('consultation_minutes', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True),
                              server_default=sa.text('now()'), autoincrement=False, nullable=True),
                    sa.Column('updated_at', postgresql.TIMESTAMP(
                        timezone=True), autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(
                        ['product_id'], ['products.id'], name='products_for_sale_product_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['property_id'], ['properties.id'], name='products_for_sale_property_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['room_id'], ['rooms.id'], name='products_for_sale_room_id_fkey'),
                    sa.ForeignKeyConstraint(
                        ['seller_id'], ['seller_profiles.id'], name='products_for_sale_seller_id_fkey'),
                    sa.PrimaryKeyConstraint(
                        'id', name='products_for_sale_pkey')
                    )

    # データを戻す
    op.execute("""
        INSERT INTO products_for_sale (
            id, seller_id, name, description, price,
            sale_type, consultation_type, status,
            property_id, room_id, product_id,
            is_negotiable, consultation_minutes,
            created_at, updated_at
        )
        SELECT
            id, seller_id, title, description, price,
            listing_type, service_type, status,
            property_id, room_id, product_id,
            is_negotiable, service_duration,
            created_at, updated_at
        FROM listing_items;
    """)

    # 外部キーを元に戻す
    op.add_column('sales', sa.Column('product_for_sale_id',
                  sa.INTEGER(), autoincrement=False, nullable=True))
    op.execute("""
        UPDATE sales
        SET product_for_sale_id = listing_item_id
    """)
    op.alter_column('sales', 'product_for_sale_id', nullable=False)
    op.drop_constraint(None, 'sales', type_='foreignkey')
    op.create_foreign_key('sales_product_for_sale_id_fkey', 'sales',
                          'products_for_sale', ['product_for_sale_id'], ['id'])
    op.drop_column('sales', 'listing_item_id')

    op.add_column('purchases', sa.Column('product_for_sale_id',
                  sa.INTEGER(), autoincrement=False, nullable=True))
    op.execute("""
        UPDATE purchases
        SET product_for_sale_id = listing_item_id
    """)
    op.alter_column('purchases', 'product_for_sale_id', nullable=False)
    op.drop_constraint(None, 'purchases', type_='foreignkey')
    op.create_foreign_key('purchases_product_for_sale_id_fkey', 'purchases',
                          'products_for_sale', ['product_for_sale_id'], ['id'])
    op.drop_column('purchases', 'listing_item_id')

    op.drop_table('listing_items')
    # ### end Alembic commands ###
