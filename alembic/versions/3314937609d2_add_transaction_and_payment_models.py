"""add_transaction_and_payment_models

Revision ID: 3314937609d2
Revises: e861a2447ec6
Create Date: 2024-12-30 08:08:00.534611

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '3314937609d2'
down_revision: Union[str, None] = 'e861a2447ec6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # 既存のpurchases, salesテーブルを削除
    op.drop_table('sales')
    op.drop_table('purchases')

    # buyer_profiles テーブルの作成
    op.create_table('buyer_profiles',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('stripe_customer_id',
                              sa.String(), nullable=True),
                    sa.Column('default_payment_method_id',
                              sa.String(), nullable=True),
                    sa.Column('has_saved_payment_method', sa.Boolean(),
                              server_default='false', nullable=False),
                    sa.Column('last_payment_method_type',
                              sa.String(), nullable=True),
                    sa.Column('shipping_postal_code',
                              sa.String(), nullable=True),
                    sa.Column('shipping_prefecture',
                              sa.String(), nullable=True),
                    sa.Column('shipping_city', sa.String(), nullable=True),
                    sa.Column('shipping_address1', sa.String(), nullable=True),
                    sa.Column('shipping_address2', sa.String(), nullable=True),
                    sa.Column('phone_number', sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('user_id'),
                    sa.UniqueConstraint('stripe_customer_id')
                    )
    op.create_index('ix_buyer_profiles_stripe_customer_id',
                    'buyer_profiles', ['stripe_customer_id'], unique=True)

    # saved_payment_methods テーブルの作成
    op.create_table('saved_payment_methods',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('buyer_profile_id',
                              sa.Integer(), nullable=False),
                    sa.Column('payment_method_id',
                              sa.String(), nullable=False),
                    sa.Column('payment_type', sa.String(), nullable=False),
                    sa.Column('card_brand', sa.String(), nullable=True),
                    sa.Column('card_last4', sa.String(), nullable=True),
                    sa.Column('card_exp_month', sa.Integer(), nullable=True),
                    sa.Column('card_exp_year', sa.Integer(), nullable=True),
                    sa.Column('is_default', sa.Boolean(),
                              server_default='false', nullable=False),
                    sa.Column('is_active', sa.Boolean(),
                              server_default='true', nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(['buyer_profile_id'], [
                                            'buyer_profiles.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('payment_method_id')
                    )
    op.create_index('ix_saved_payment_methods_buyer_default',
                    'saved_payment_methods', ['buyer_profile_id', 'is_default'])
    op.create_index('ix_saved_payment_methods_active_type',
                    'saved_payment_methods', ['is_active', 'payment_type'])

    # transactions テーブルの作成
    op.create_table('transactions',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('buyer_id', sa.Integer(), nullable=False),
                    sa.Column('seller_id', sa.Integer(), nullable=False),
                    sa.Column('listing_id', sa.Integer(), nullable=False),
                    sa.Column('payment_intent_id',
                              sa.String(), nullable=False),
                    sa.Column('total_amount', sa.Integer(), nullable=False),
                    sa.Column('platform_fee', sa.Integer(), nullable=False),
                    sa.Column('seller_amount', sa.Integer(), nullable=False),
                    sa.Column('transaction_status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED',
                                                            'CANCELLED', 'REFUNDED', name='transactionstatus'), nullable=False),
                    sa.Column('payment_status', sa.Enum('PENDING', 'PROCESSING', 'SUCCEEDED',
                                                        'FAILED', 'REFUNDED', name='paymentstatus'), nullable=False),
                    sa.Column('transfer_status', sa.Enum('PENDING', 'PROCESSING',
                                                         'SUCCEEDED', 'FAILED', name='transferstatus'), nullable=False),
                    sa.Column('last_error_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('error_count', sa.Integer(),
                              server_default='0', nullable=False),
                    sa.Column('has_unresolved_error', sa.Boolean(),
                              server_default='false', nullable=False),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.ForeignKeyConstraint(
                        ['buyer_id'], ['buyer_profiles.id'], ),
                    sa.ForeignKeyConstraint(
                        ['listing_id'], ['listing_items.id'], ),
                    sa.ForeignKeyConstraint(
                        ['seller_id'], ['seller_profiles.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('ix_transactions_created_at',
                    'transactions', ['created_at'])
    op.create_index('ix_transactions_transaction_status',
                    'transactions', ['transaction_status'])
    op.create_index('ix_transactions_payment_transfer_status',
                    'transactions', ['payment_status', 'transfer_status'])
    op.create_index('ix_transactions_buyer_created',
                    'transactions', ['buyer_id', 'created_at'])
    op.create_index('ix_transactions_seller_created',
                    'transactions', ['seller_id', 'created_at'])

    # transaction_audit_logs テーブルの作成
    op.create_table('transaction_audit_logs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('transaction_id', sa.Integer(), nullable=False),
                    sa.Column('field_name', sa.String(), nullable=False),
                    sa.Column('old_value', sa.String(), nullable=True),
                    sa.Column('new_value', sa.String(), nullable=True),
                    sa.Column('changed_by_user_id',
                              sa.Integer(), nullable=True),
                    sa.Column('change_type', sa.Enum('SYSTEM', 'USER',
                                                     'WEBHOOK', name='changetype'), nullable=False),
                    sa.Column('change_reason', sa.Text(), nullable=True),
                    sa.Column('change_metadata', postgresql.JSON(
                        astext_type=sa.Text()), nullable=True),
                    sa.Column('timestamp', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(
                        ['changed_by_user_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['transaction_id'], [
                                            'transactions.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )

    # transaction_error_logs テーブルの作成
    op.create_table('transaction_error_logs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('transaction_id', sa.Integer(), nullable=False),
                    sa.Column('error_type', sa.Enum('STRIPE_PAYMENT_ERROR', 'STRIPE_TRANSFER_ERROR',
                                                    'VALIDATION_ERROR', 'SYSTEM_ERROR', name='errortype'), nullable=False),
                    sa.Column('error_code', sa.String(), nullable=False),
                    sa.Column('error_message', sa.Text(), nullable=False),
                    sa.Column('error_details', postgresql.JSON(
                        astext_type=sa.Text()), nullable=True),
                    sa.Column('retry_count', sa.Integer(),
                              server_default='0', nullable=False),
                    sa.Column('is_resolved', sa.Boolean(),
                              server_default='false', nullable=False),
                    sa.Column('resolved_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('resolution_notes', sa.Text(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=False),
                    sa.ForeignKeyConstraint(['transaction_id'], [
                                            'transactions.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_index('ix_transaction_error_logs_transaction_error_type',
                    'transaction_error_logs', ['transaction_id', 'error_type'])
    op.create_index('ix_transaction_error_logs_created_at',
                    'transaction_error_logs', ['created_at'])
    op.create_index('ix_transaction_error_logs_is_resolved_error_type',
                    'transaction_error_logs', ['is_resolved', 'error_type'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 追加したテーブルを逆順で削除
    op.drop_index('ix_transaction_error_logs_is_resolved_error_type',
                  table_name='transaction_error_logs')
    op.drop_index('ix_transaction_error_logs_created_at',
                  table_name='transaction_error_logs')
    op.drop_index('ix_transaction_error_logs_transaction_error_type',
                  table_name='transaction_error_logs')
    op.drop_table('transaction_error_logs')
    op.drop_table('transaction_audit_logs')
    op.drop_index('ix_transactions_seller_created', table_name='transactions')
    op.drop_index('ix_transactions_buyer_created', table_name='transactions')
    op.drop_index('ix_transactions_payment_transfer_status',
                  table_name='transactions')
    op.drop_index('ix_transactions_transaction_status',
                  table_name='transactions')
    op.drop_index('ix_transactions_created_at', table_name='transactions')
    op.drop_table('transactions')
    op.drop_index('ix_saved_payment_methods_active_type',
                  table_name='saved_payment_methods')
    op.drop_index('ix_saved_payment_methods_buyer_default',
                  table_name='saved_payment_methods')
    op.drop_table('saved_payment_methods')
    op.drop_index('ix_buyer_profiles_stripe_customer_id',
                  table_name='buyer_profiles')
    op.drop_table('buyer_profiles')

    # 削除したテーブルを復元
    op.create_table('purchases',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('buyer_id', sa.Integer(), nullable=False),
                    sa.Column('amount', sa.Integer(), nullable=False),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.Column('stripe_payment_intent_id',
                              sa.String(), nullable=True),
                    sa.Column('stripe_payment_status',
                              sa.String(), nullable=True),
                    sa.Column('stripe_transfer_id',
                              sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('listing_item_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['buyer_id'], ['users.id'], ),
                    sa.ForeignKeyConstraint(['listing_item_id'], [
                                            'listing_items.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('stripe_payment_intent_id'),
                    sa.UniqueConstraint('stripe_transfer_id')
                    )

    op.create_table('sales',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('seller_id', sa.Integer(), nullable=False),
                    sa.Column('purchase_id', sa.Integer(), nullable=False),
                    sa.Column('amount', sa.Integer(), nullable=False),
                    sa.Column('platform_fee', sa.Integer(), nullable=False),
                    sa.Column('seller_amount', sa.Integer(), nullable=False),
                    sa.Column('status', sa.String(), nullable=False),
                    sa.Column('stripe_transfer_id',
                              sa.String(), nullable=True),
                    sa.Column('stripe_transfer_status',
                              sa.String(), nullable=True),
                    sa.Column('created_at', sa.DateTime(timezone=True),
                              server_default=sa.text('now()'), nullable=True),
                    sa.Column('updated_at', sa.DateTime(
                        timezone=True), nullable=True),
                    sa.Column('listing_item_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['listing_item_id'], [
                                            'listing_items.id'], ),
                    sa.ForeignKeyConstraint(
                        ['purchase_id'], ['purchases.id'], ),
                    sa.ForeignKeyConstraint(
                        ['seller_id'], ['seller_profiles.id'], ),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('purchase_id'),
                    sa.UniqueConstraint('stripe_transfer_id')
                    )
    # ### end Alembic commands ###
